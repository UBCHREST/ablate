# single example of a periodic domain with an inviscid flow with inertialParticles
---
# metadata for the simulation
environment:
  title: _2DInertialParticlesInCompressibleFlow
  tagDirectory: false
arguments: { }
# set up the time stepper responsible for marching in time
timestepper:
  name: theMainTimeStepper
  # io controls how often the results are saved to a file for visualization and restart
  io: # by default the ablate::io::Hdf5Serializer serializer is used
    interval: 0
  # time stepper specific input arguments.  By default, the time stepper will use TSADAPTBASIC
  arguments:
    ts_type: rk
    ts_adapt_type: none
    ts_max_steps: 20
  # sets a single box domain with periodic boundary conditions
  domain: !ablate::domain::BoxMesh
    name: simpleBoxField
    faces: [ 6, 6 ]
    lower: [ 0, 0 ]
    upper: [ 1, 1 ]
    boundary: [ "PERIODIC", "PERIODIC" ]
    simplex: false
    # pass in these options to petsc when setting up the domain.  Using an option list here prevents command line arguments from being seen.
    options:
      dm_refine: 1
    modifiers:
      # if using mpi, this modifier distributes cells
      - !ablate::domain::modifiers::DistributeWithGhostCells
      # if using a FVM ghost boundary cells must be added
      - !ablate::domain::modifiers::GhostBoundaryCells
    fields:
      # all fields must be defined before solvers.  The ablate::finiteVolume::CompressibleFlowFields is a helper
      # class that creates the required fields for the compressible flow solver (rho, rhoE, rhoU, ...)
      - !ablate::finiteVolume::CompressibleFlowFields
        eos: !ablate::eos::PerfectGas &eos
          parameters:
            gamma: 1.4
            Rgas: 287.0
        conservedFieldOptions:
          # use a leastsquares interpolant for cell based calculations with the default petsc limiter
          petscfv_type: leastsquares

      # specify the extra pressure field for output
      - !ablate::domain::FieldDescription
        name: pressure
        type: FV
        location: aux # the pressure field is computed as part of decode and NOT integrated in time directly
  # set the initial conditions of the flow field
  initialization:
    - !ablate::finiteVolume::fieldFunctions::Euler
      state:
        eos: *eos
        pressure: 101325.0
        temperature: 300.0
        velocity: "100*x*x, 200*y*y"

solvers:
  # the CompressibleFlowSolver is used to solve the flow
  - !ablate::finiteVolume::CompressibleFlowSolver
    id: vortexFlowField

    # overwrite and set the time step based upon the CFL constraint
    computePhysicsTimeStep: true

    # a flux calculator must be specified to so solver for advection
    fluxCalculator: !ablate::finiteVolume::fluxCalculator::Ausm

    # the cfl is used to compute the physics time step
    parameters:
      cfl: 0.5

    # no output monitors for the flow solver
    monitors: []
      # share the existing eos with the compressible flow solver
    eos: *eos

  # use a particle solver with a inertial process
  - !ablate::particles::ParticleSolver
    id: flowParticles
    # Petsc options used for the timestepper
    options:
      ts_dt: 0.005
    # initial particle locations
    initializer: !ablate::particles::initializers::BoxInitializer
      lower: [ 0.3,0.3 ]
      upper: [ 0.7,0.3 ]
      particlesPerDim: 9

    # all fields except the coordinate must be specified
    fields:
      - name: ParticleVelocity
        location: SOL # Solution means that it is part of the time stepping in the particle solver
        components: [u, v]
      - name: ParticleDiameter
        location: AUX
      - name: ParticleDensity
        location: AUX
    # processes used to add source terms for the particle solver
    processes:
      # The Inertial particles is limited to using constant values for the fluid information
      - !ablate::particles::processes::Inertial
        parameters:
          fluidDensity: 1.0
          fluidViscosity: 0.5
          gravityField: 0.0, -9.8
    # Initialize the specified particle fields
    fieldInitialization:
      - fieldName: ParticleDiameter
        field: 0.01
      - fieldName: ParticleDensity
        field: 90.0
      - fieldName: ParticleVelocity
        field: "0.0, 0.0"
    # Monitor particle statistics
    monitors:
      - !ablate::monitors::ParticleCount
      - !ablate::monitors::ParticleAverage
