# Simple test that checks the functionality of the Axisymmetric mesh generator
---
test:
  # a unique test name for this integration tests
  name: meshGeneratorAxisymmetric
  # create a default assert that compares the log file
  assert: "inputs/domain/meshGeneratorAxisymmetric.txt"

# metadata for the simulation
environment:
  title: _meshGeneratorAxisymmetric
  tagDirectory: false
# global arguments that can be used by petsc
arguments:
  # force the new mesh to check everything
  dm_plex_check_all: ""

# set up the time stepper responsible for marching in time
timestepper:
  # write the output to show the mesh
  io:
    interval: 0
  # for this example there are no time stepper arguments (empty simulation)
  arguments: { }
  # create a simple box mesh for simulation
  domain: !ablate::domain::MeshGenerator
    name: exampleAxisymmetricMesh
    # specify the axisymmetric mesh description
    description: !ablate::domain::descriptions::Axisymmetric
      axis:
        start: [0.0, 0.0, 0.0]
        length: 2.0
        nodes: 41 # one more node than slice

      radius: ".1*z*z+ 0.5"
      numberWedges: 20
      numberShells: 10

    # setup some dummy fields
    fields:
      - name: exampleFVField
        components: [ "xx", "yy", "zz" ]
        type: FVM
    modifiers:

      # the DmViewFromOptions "modifier" does not modify the dm but outputs. See [PetscOptionsGetViewer](https://petsc.org/release/docs/manualpages/Viewer/PetscOptionsGetViewer.html) for more details
      - !ablate::monitors::DmViewFromOptions
        options: ascii
  # initialize the dummy field
  initialization:
    - fieldName: "exampleFVField"
      field: "x, y, z"

# this is a test input file with no solvers
solvers: [ ]