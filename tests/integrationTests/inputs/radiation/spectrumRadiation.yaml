#### Description
#This test shows the use of a wavelength dependent radiation model.
#The wavelength dependent model is used in the virtual two-color pyrometry formulation to determine the temperature.
#The model is based on the black body spectrum and Rayleigh scattering approximation.
#The model requires the soot mechanism to be specified in the eos.
#The model also requires the soot mass fraction to be specified in the initialization.
#The model requires the wavelengths to be specified in the properties.
#The model requires the radiation solver to be specified in the solver list.
---

environment:
  title: _spectrum
  tagDirectory: true
arguments: { }
timestepper:
  name: theMainTimeStepper
  arguments:
    ts_type: rk
    ts_max_steps: 4
  domain: !ablate::domain::BoxMeshBoundaryCells
    name: simpleBoxField
    faces: [ 3, 5 ]
    lower: [ 0 , -0.0105 ]
    upper: [ 0.5 , 0.0105 ]
    simplex: false
    options:
      dm_refine: 0
      dm_plex_hash_location: true
    preModifiers:
      - !ablate::domain::modifiers::DistributeWithGhostCells
    postModifiers:
      - !ablate::domain::modifiers::GhostBoundaryCells
    fields:
      - !ablate::finiteVolume::CompressibleFlowFields
        eos: !ablate::eos::TChem  &eos
          mechFile: ../mechanisms/MMAReduced.soot.yml

        # use a higher order field for the conserved field transport options
        conservedFieldOptions:
          petscfv_type: leastsquares
          petsclimiter_type: vanleer

      # create a conserved field to track ndd
      - !ablate::finiteVolume::ConservedField
        name: "Progress"
        components: [ "NDD" ]

      # by adding a pressure field the code will compute and output pressure
      - !ablate::domain::FieldDescription
        name: pressure
        type: FV
        location: aux

  initialization:
    - !ablate::finiteVolume::fieldFunctions::Euler
      state:
        &initState
        eos: *eos
        temperature: 1200.0
        pressure: 101325.0
        velocity: [ 0.0 ]
        # the mass fractions must be specified to compute rho, e, etc.
        other: !ablate::finiteVolume::fieldFunctions::MassFractions
          # the mass fraction class allows for a subset of mass fractions to be specified.  The rest are assumed zero
          eos: *eos
          values:
            - fieldName: N2
              field: 0.724672103
            - fieldName: MMETHAC_C5H8O2
              field: 0.055186656
            - fieldName: O2
              field: 0.220141239
    # the DensityMassFractions reuses the initState to set the densityMassFractions for all species
    - !ablate::finiteVolume::fieldFunctions::DensityMassFractions
      state: *initState

    # Set the number density to zero
    - fieldName: densityProgress
      field: "0.0"
solvers:
  - !ablate::finiteVolume::CompressibleFlowSolver
    id: vortexFlowField
    region:
      name: interiorCells
    monitors:
      - !ablate::monitors::MaxMinAverage
        field: euler
    eos: *eos
  - !ablate::boundarySolver::BoundarySolver
    id: openBoundary
    region:
      name: boundaryCells
    fieldBoundary:
      name: boundaryFaces
    processes:
      - !ablate::boundarySolver::lodi::Inlet
        eos: *eos
  - !ablate::radiation::VolumeRadiation
    id: radiationSolver
    region:
      name: interiorCells
    interval: 1
    radiation: !ablate::radiation::Radiation
      id: radiation
      region:
        name: interiorCells
      rays: 5
      # Spectrum properties model with two wavelengths
      properties: !ablate::eos::radiationProperties::SootSpectrumProperties
        eos: *eos
        wavelengths: [ 650.E-9 ]
        bandwidths: [ 10.E-9 ]