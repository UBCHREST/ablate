name: Merge Workflow

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

jobs:
  tag-version:
    # Ensure test job passes before pushing image.
    strategy:
      matrix:
        machineConfig: [ { runson: ubuntu-latest, arch: AMD64 } ]
        petscConfig: [arch-ablate-opt]
    runs-on: ${{ matrix.machineConfig.runson }}
    if: github.event_name == 'push'

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ matrix.machineConfig.arch }}-${{matrix.petscConfig}}-${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ matrix.machineConfig.arch }}-${{matrix.petscConfig}}-${{ runner.os }}-buildx-

      - name: Build the docker image
        run: |
          docker buildx build .\
            --file DockerTestFile \
            --tag framework-test-image-${{ matrix.petscConfig }} \
            --build-arg PETSC_BUILD_ARCH='${{ matrix.petscConfig }}' \
            --load \
            --cache-from "type=local,src=/tmp/.buildx-cache" \
            --cache-to "type=local,dest=/tmp/.buildx-cache"

      - name: Get the version from the build file
        run: echo "VERSION=$(docker run --rm framework-test-image-${{ matrix.petscConfig }} awk -F= '/CMAKE_PROJECT_VERSION:/ {print $NF}' CMakeCache.txt )" >> $GITHUB_ENV

      - name: set version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{env.VERSION}}

  generate-auto-docs:
    strategy:
      matrix:
        machineConfig: [ { runson: ubuntu-latest, arch: AMD64 } ]
        petscConfig: [arch-ablate-opt]
    runs-on: ${{ matrix.machineConfig.runson }}
    if: github.event_name == 'push'

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ matrix.machineConfig.arch }}-${{matrix.petscConfig}}-${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ matrix.machineConfig.arch }}-${{matrix.petscConfig}}-${{ runner.os }}-buildx-

      - name: Build the docker image
        run: |
          docker buildx build .\
            --file DockerTestFile \
            --tag framework-test-image-${{ matrix.petscConfig }} \
            --build-arg PETSC_BUILD_ARCH='${{ matrix.petscConfig }}' \
            --load \
            --cache-from "type=local,src=/tmp/.buildx-cache" \
            --cache-to "type=local,dest=/tmp/.buildx-cache"

      - name: Get the version from the build file
        run: docker run --rm framework-test-image-${{ matrix.petscConfig }} ./ablate --version > docs/_includes/generated/version.html

      - name: Get the PETSc version used to build/test
        run: docker run --rm framework-test-image-${{ matrix.petscConfig }} git -C /petsc rev-parse --short HEAD > docs/_includes/generated/petscVersion.html

      - name: Write the component docs
        run: docker run --rm framework-test-image-${{ matrix.petscConfig }} ./ablate --help > docs/_includes/generated/components.md

      - name: Commit changes
        uses: EndBug/add-and-commit@v7
        with:
          default_author: github_actions
          pull_strategy: 'NO-PULL'
          message: 'auto-generated documentation'
          add: 'docs/_includes/generated/*'
          push:  'origin HEAD:gh-pages --force'