name: Deploy ABLATE.dev workflow

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [ "mcgurn/doc-update" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      # setup python for later use
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: '3.8'
      - name: Install python dep
        run: pip install inflection

      # checkout the latest commit of the code
      - name: Checkout
        uses: actions/checkout@v3

      # setup docker image of ablate
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-ablate-publish-doc-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-ablate-publish-doc-buildx-

      - name: Build the docker image
        run: |
          docker buildx build .\
            --file DockerTestFile \
            --tag framework-doc-image \
            --load \
            --cache-from "type=local,src=/tmp/.buildx-cache" \
            --cache-to "type=local,dest=/tmp/.buildx-cache"

      - name: Get the version from the build file
        run: docker run --rm framework-doc-image ./ablate --version > docs/_includes/generated/version.html

      - name: Get the PETSc version used to build/test
        run: docker run --rm framework-doc-image git -C /petsc rev-parse --short HEAD | tr -d '\n' > docs/_includes/generated/petscVersion.html

      - name: Write the component docs
        run: docker run --rm framework-doc-image ./ablate --help > components.md

      - name: Run tye python websiteDocsGenerator script
        run: |
          python docs/websiteDocsGenerator.py \
            --componentListSource  components.md \
            --componentOutputDir docs/content/simulations/components/ \
            --exampleInputDir tests/integrationTests/inputs \
            --exampleOutputDir docs/content/simulations/examples/

      - name: Update the doxyfile.config with the version
        run: echo "PROJECT_NUMBER = $(docker run --rm framework-doc-image ./ablate --version)" >> doxyfile.config

      - name: Generate Source File Documentation
        uses: mattnotmitt/doxygen-action@v1.9.2
        with:
          doxyfile-path: 'doxyfile.config'

      # now build the pages with the standard Build with Jekyll actions
      - name: Setup Pages
        uses: actions/configure-pages@v1
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./docs
          destination: ./_site

      # Upload all the artifacts
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
