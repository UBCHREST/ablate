name: Tag Version Workflow

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

jobs:
  tag-version:
    # Ensure test job passes before pushing image.
    strategy:
      matrix:
        arch: [ { runson: ubuntu-latest, id: -amd64 } ]
        compiler: [ { cc: gcc, cxx: g++, id: -gcc } ]
        indices: [ { index64bit: 0, id: "" } ]
        petscConfig: [ arch-ablate-opt ]
    runs-on: ${{ matrix.arch.runson }}
    if: github.event_name == 'push'

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Build the docker image
        run: |
          ABLATE_DEPENDENCY_IMAGE=ghcr.io/ubchrest/ablate/ablate-dependencies${{matrix.compiler.id}}${{matrix.indices.id}}:latest
          
          docker buildx build .\
            --file DockerTestFile \
            --tag framework-test-image-${{matrix.tensorFlowConfig}}-${{ matrix.petscConfig }}${{matrix.compiler.id}}${{matrix.indices.id}} \
            --build-arg PETSC_BUILD_ARCH='${{ matrix.petscConfig }}' \
            --build-arg ENABLE_TENSOR_FLOW='${{ matrix.tensorFlowConfig }}' \
            --build-arg ABLATE_DEPENDENCY_IMAGE=$ABLATE_DEPENDENCY_IMAGE \
            --load
      - name: Get the version from the build file
        run: echo "VERSION=$(docker run --rm framework-test-image-${{matrix.tensorFlowConfig}}-${{ matrix.petscConfig }}${{matrix.compiler.id}}${{matrix.indices.id}} awk -F= '/CMAKE_PROJECT_VERSION:/ {print $NF}' CMakeCache.txt )" >> $GITHUB_ENV

      - name: set version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{env.VERSION}}